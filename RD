// RING DETECTION

import android.app.ActivityManager;
import android.app.Service;
import android.app.ActivityManager.RunningServiceInfo;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import android.widget.Toast;


public class RD extends Service{

	

	static TelephonyManager T;
	static PhoneStateListener listener;
	
	@Override
	public IBinder onBind(Intent arg0) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		// TODO Auto-generated method stub

		
		
		
		T = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);

		listener = new PhoneStateListener() {
			@Override
			public void onCallStateChanged(int state, String incomingNumber) {
				String stateString = "N/A";
				
				Global global = (Global) getApplicationContext();
				
				switch (state) {
				case TelephonyManager.CALL_STATE_IDLE:
					stateString = "Idle";
					
					global.setVar1(stateString);
					// unregisterReceiver(myReceiver);
					// DetectionService.MyThread.interrupted();

					break;
				case TelephonyManager.CALL_STATE_OFFHOOK:
					stateString = "Off Hook";
					
					global.setVar1(stateString);
					// unregisterReceiver(myReceiver);
					// DetectionService.MyThread.interrupted();

					break;
				case TelephonyManager.CALL_STATE_RINGING:
					stateString = "Ringing";
					global.setVar1(stateString);
					
					break;
				}
					
				if (stateString == "Ringing") {

			
					
				//	Toast.makeText(RD.this, stateString, Toast.LENGTH_SHORT)
				//			.show();
					
					Intent i = new Intent(RD.this,LD.class);
					startService(i);

				}
			
			}
		};
		T.listen(listener, PhoneStateListener.LISTEN_CALL_STATE);


		return super.onStartCommand(intent, flags, startId);
	}

	
	
	private boolean ServiceStatus(Class<?> serviceClass) {
		ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
	
		for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
			
			if (serviceClass.getName().equals(service.service.getClassName())) {
				return true;
			}
		}
		return false;
	}

	


}
